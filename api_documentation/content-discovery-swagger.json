{
  "openapi": "3.0.0",
  "info": {
    "title": "Content Discovery Service",
    "version": "1.0.0",
    "description": "Percipio Content Discovery Service"
  },
  "paths": {
    "/v2/organizations/{orgId}/catalog-content": {
      "get": {
        "summary": "Returns licensed content associated with an organization with metadata sufficient to populate courses into a catalog",
        "tags": [
          "Content"
        ],
        "operationId": "getCatalogContentV2",
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "transformName",
            "description": "Value to identify a transform that will map Percipio data into a client specific format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedSince",
            "description": "Filter criteria that returns catalog content changes since the date specified in GMT with an ISO format.  Items will be included in the response if the content metadata has changed since the date specified but may also be included if there have been configuration changes that have increased or decreased the number of content items that the organization has access to.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "offset",
            "description": "Used in conjunction with 'max' to specify which set of 'max' content items should be returned. The default is 0 which returns 1 through max content items. If offset is sent as 1, then content items 2 through max+1 are returned.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "max",
            "description": "The maximum number of content items to return in a response. The default is 1000. Valid values are between 1 and 1000.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 1000
            }
          },
          {
            "name": "pagingRequestId",
            "description": "Used to access the unique dataset to be split among pages of results",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogContent"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/v1/organizations/{orgId}/search-content": {
      "get": {
        "summary": "Returns licensed content associated with an organization with metadata sufficient to implement a federated search",
        "tags": [
          "Content"
        ],
        "operationId": "getSearchContent",
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "q",
            "description": "The search query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "localeCode",
            "description": "Locale expressed as RFC 5646 language tag (such as 'en', 'fr', 'pt-BR', etc.).  Defaults to 'en' if not provided.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "typeFilter",
            "description": "Array of types to restrict filter results with",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "COURSE",
                  "VIDEO",
                  "BOOK",
                  "AUDIOBOOK",
                  "CHANNEL",
                  "LINKED_CONTENT",
                  "SCHEDULED_CONTENT",
                  "ASSESSMENT",
                  "JOURNEY"
                ]
              }
            }
          },
          {
            "name": "modality",
            "description": "Modality for filtering results",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "READ",
                  "WATCH",
                  "LISTEN",
                  "PRACTICE",
                  "ATTEND",
                  "ASSESS"
                ]
              }
            }
          },
          {
            "name": "expertiseLevel",
            "description": "Expertise Level for filtering results",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "BEGINNER",
                  "INTERMEDIATE",
                  "EXPERT"
                ]
              }
            }
          },
          {
            "name": "licensePoolIds",
            "description": "Array of License pool IDs to which to restrict content.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "offset",
            "description": "Used in conjunction with 'max' to specify which set of 'max' content items should be returned. The default is 0 which returns 1 through max content items. If offset is sent as 1, then content items 2 through max+1 are returned.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "max",
            "description": "The maximum number of content items to return in a response. The default is 25. Valid values are between 1 and 1000.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/v1/organizations/{orgId}/catalog-structure": {
      "get": {
        "summary": "Returns the catalog structure for licensed content associated with an organization",
        "tags": [
          "Content"
        ],
        "operationId": "getCatalogStructure",
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogStructure"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/v1/organizations/{orgId}/content/{contentId}/share-link": {
      "post": {
        "summary": "Creates shareable link for specified organization and content",
        "description": "API to create shareable link for specified organization and content of supported content type",
        "tags": [
          "Sharelink"
        ],
        "operationId": "createShareableLinkForOrg",
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "contentId",
            "description": "Content UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateShareLinkBody"
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareLinkForId"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected Error"
          }
        }
      }
    },
    "/v1/organizations/{orgId}/users/{userId}/content/{contentId}/share-link": {
      "post": {
        "summary": "Creates shareable link for specified organization, content and user",
        "description": "API to create shareable link for specified organization, user and content of supported content type",
        "tags": [
          "Sharelink"
        ],
        "operationId": "createShareableLinkForUser",
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "description": "User UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "contentId",
            "description": "Content UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateShareLinkBody"
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareLinkForId"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected Error"
          }
        }
      }
    },
    "/v1/organizations/{orgId}/share-link/url": {
      "post": {
        "summary": "Creates shareable link for Percipio url for an organization",
        "description": "API to create shareable link for a valid relative Percipio url of specified organization.",
        "tags": [
          "Sharelink"
        ],
        "operationId": "createShareableLinkForUrlWithOrg",
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Url"
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareLinkForUrl"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected Error"
          }
        }
      }
    },
    "/v1/organizations/{orgId}/users/{userId}/share-link/url": {
      "post": {
        "summary": "Creates shareable link for Percipio url for an organization and user",
        "description": "API to create shareable link for a valid relative Percipio url of specified organization for given user.",
        "tags": [
          "Sharelink"
        ],
        "operationId": "createShareableLinkForUrlWithUser",
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "description": "User UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Url"
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareLinkForUrl"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected Error"
          }
        }
      }
    },
    "/v1/organizations/{orgId}/compliance-content": {
      "get": {
        "summary": "Returns licensed Compliance content associated with an organization with metadata sufficient to populate courses into a catalog",
        "tags": [
          "Compliance"
        ],
        "operationId": "getComplianceContent",
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "offset",
            "description": "Used in conjunction with 'max' to specify which set of 'max' content items should be returned. The default is 0 which returns 1 through max content items. If offset is sent as 1, then content items 2 through max+1 are returned.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "max",
            "description": "The maximum number of content items to return in a response. The default is 1000. Valid values are between 1 and 1000.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComplianceContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/v1/organizations/{orgId}/areas/academy": {
      "get": {
        "summary": "Returns all blended academies",
        "tags": [
          "Content"
        ],
        "operationId": "getBlendedAcademiesV1",
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogContent"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "tags": [],
  "security": [
    {
      "Authorization": []
    }
  ],
  "servers": [
    {
      "url": "/content-discovery"
    }
  ],
  "components": {
    "requestBodies": {
      "Url": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Url"
            }
          }
        },
        "description": "Details used to create share links for url\n",
        "required": true
      },
      "CreateShareLinkBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateShareLinkBody"
            }
          }
        },
        "description": "The locale code to be stored is supplied in the request body"
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "description": "Service account authorization token",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "BaseContent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "contentType": {
            "type": "object",
            "properties": {
              "percipioType": {
                "type": "string",
                "description": "Base content types",
                "enum": [
                  "COURSE",
                  "VIDEO",
                  "BOOK",
                  "AUDIOBOOK",
                  "CHANNEL",
                  "JOURNEY",
                  "LINKED_CONTENT",
                  "SCHEDULED_CONTENT",
                  "ASSESSMENT",
                  "DYNAMIC_CONTENT",
                  "CERTIFICATION_PATH"
                ]
              },
              "category": {
                "description": "General category of content",
                "enum": [
                  "COURSE",
                  "VIDEO",
                  "BOOK",
                  "AUDIOBOOK",
                  "CHANNEL",
                  "CURRICULUM",
                  "ASSESSMENT",
                  "null"
                ],
                "nullable": true,
                "type": "string"
              },
              "source": {
                "description": "Source of content (for instance, YouTube)",
                "nullable": true,
                "type": "string"
              },
              "displayLabel": {
                "description": "Value to use as a display label, such as Video, Book, Book Summary, Audiobook, Audiobook Summary, Podcast, Article, Course, Document, Practice Lab, YouTube - or any other new additions",
                "type": "string"
              }
            },
            "required": [
              "percipioType"
            ]
          },
          "localeCodes": {
            "type": "array",
            "description": "RFC 5646 language tag, consisting of 2-character language code and optional variant/region code, with hyphen delimiter (e.g. 'en', 'en-US')",
            "items": {
              "type": "string"
            }
          },
          "localizedMetadata": {
            "type": "array",
            "description": "Used when metadata is available in more than one language.  Currently only applicable to certain channels/journeys.",
            "items": {
              "type": "object",
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "RFC 5646 language tag, consisting of 2-character language code and optional variant/region code, with hyphen delimiter (e.g. 'en', 'en-US')"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "nullable": true,
                  "type": "string"
                }
              },
              "required": [
                "localeCode",
                "title"
              ]
            }
          },
          "link": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "alternateImageUrl": {
            "type": "string"
          },
          "duration": {
            "description": "Duration of content, if relevant, in ISO-8601 duration format",
            "nullable": true,
            "type": "string"
          },
          "by": {
            "type": "array",
            "description": "Instructor or author names",
            "items": {
              "type": "string"
            }
          },
          "expertiseLevels": {
            "type": "array",
            "description": "Expertise levels of the content, according to the content metadata rollup rules. Value will be empty for channels/journeys.",
            "items": {
              "type": "string",
              "enum": [
                "BEGINNER",
                "INTERMEDIATE",
                "EXPERT"
              ]
            }
          },
          "modalities": {
            "type": "array",
            "description": "The list of modalities for this content item. Value will be empty for channels/journeys, 'READ' for books, 'WATCH, LISTEN' for videos, 'READ, WATCH, LISTEN' for courses, 'READ' for books, 'LISTEN' for audiobooks, 'PRACTICE' for activities like virtual labs or assessments, 'ATTEND' for ILT content, 'ASSESS' for Skill Benchmark.",
            "items": {
              "type": "string",
              "enum": [
                "WATCH",
                "READ",
                "LISTEN",
                "PRACTICE",
                "ATTEND",
                "ASSESS"
              ]
            }
          },
          "technologies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Technology that this content describes (like Angular, React, Ruby, Sharepoint, etc.). Will be string for individual videos and list for rollup of content"
                },
                "version": {
                  "description": "Version of the specified technology this content describes (i.e. Sharepoint 2016 versus Sharepoint 2012). Will be string for individual videos and list for rollup of content",
                  "nullable": true,
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "id",
          "contentType",
          "localizedMetadata",
          "link",
          "expertiseLevels",
          "imageUrl",
          "modalities",
          "localeCodes"
        ]
      },
      "CatalogContent": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseContent"
          },
          {
            "properties": {
              "code": {
                "type": "string",
                "description": "courseware code"
              },
              "xapiActivityId": {
                "type": "string",
                "format": "uri",
                "description": "value used as activity ID in xAPI statements for content"
              },
              "xapiActivityTypeId": {
                "type": "string",
                "format": "uri",
                "description": "value used as activity type ID in xAPI statements for content"
              },
              "aiccLaunch": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "AICC launch url, equivalent to File_Name value in .au file"
                  },
                  "params": {
                    "type": "string",
                    "description": "query string params to be included with AICC launch url, equivalent to Web_Launch value in .au file"
                  }
                }
              },
              "lifecycle": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE"
                    ]
                  },
                  "publishDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdatedDate": {
                    "format": "date-time",
                    "nullable": true,
                    "type": "string"
                  },
                  "plannedRetirementDate": {
                    "format": "date-time",
                    "nullable": true,
                    "type": "string"
                  },
                  "retiredDate": {
                    "format": "date-time",
                    "nullable": true,
                    "type": "string"
                  },
                  "includedFromActivity": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "status",
                  "publishDate"
                ]
              },
              "keywords": {
                "type": "array",
                "description": "Keyword tags for use in content search.",
                "items": {
                  "type": "string"
                }
              },
              "publication": {
                "properties": {
                  "copyrightYear": {
                    "type": "integer"
                  },
                  "isbn": {
                    "type": "string"
                  },
                  "publisher": {
                    "type": "string"
                  }
                },
                "nullable": true,
                "type": "object"
              },
              "characteristics": {
                "type": "object",
                "properties": {
                  "earnsBadge": {
                    "type": "boolean"
                  },
                  "hasAssessment": {
                    "type": "boolean"
                  },
                  "isCompliance": {
                    "type": "boolean"
                  },
                  "ratings": {
                    "type": "object",
                    "properties": {
                      "avgRating": {
                        "type": "number"
                      }
                    }
                  }
                }
              },
              "credentials": {
                "properties": {
                  "cpeCredits": {
                    "nullable": true,
                    "type": "number"
                  },
                  "nasbaReady": {
                    "type": "boolean"
                  },
                  "pduCredits": {
                    "nullable": true,
                    "type": "number"
                  }
                },
                "nullable": true,
                "type": "object"
              },
              "associations": {
                "type": "object",
                "properties": {
                  "areas": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "subjects": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "channels": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "title": {
                          "type": "string"
                        },
                        "link": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "link"
                      ]
                    }
                  },
                  "localizedChannels": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "localeCode": {
                          "type": "string",
                          "description": "RFC 5646 language tag, consisting of 2-character language code and optional variant/region code, with hyphen delimiter (e.g. 'en', 'en-US')"
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "nullable": true,
                          "type": "string"
                        },
                        "link": {
                          "type": "string"
                        },
                        "xapiActivityId": {
                          "type": "string",
                          "format": "url",
                          "description": "value used as activity id in xAPI statements for content"
                        }
                      },
                      "required": [
                        "id",
                        "localeCode",
                        "title",
                        "link",
                        "xapiActivityId"
                      ]
                    }
                  },
                  "licensedLocales": {
                    "type": "string",
                    "description": "A comma separated list of the locales the content is licensed for."
                  },
                  "skills": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "The locale associated with the skills listed."
                        },
                        "skills": {
                          "type": "array",
                          "description": "Types of skills associated with the content.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "journeys": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "title": {
                          "type": "string"
                        },
                        "link": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "link"
                      ]
                    }
                  },
                  "parent": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "type": {
                        "type": "string",
                        "description": "Content type of parent (currently only used for course as parent of video)",
                        "enum": [
                          "COURSE"
                        ]
                      },
                      "title": {
                        "type": "string"
                      },
                      "link": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type",
                      "link"
                    ]
                  },
                  "translationGroupId": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              "learningObjectives": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "providerSpecificAttributes": {
                "properties": {
                  "providerAssetId": {
                    "nullable": true,
                    "type": "string"
                  },
                  "skillCourseNumber": {
                    "nullable": true,
                    "type": "string"
                  }
                },
                "nullable": true,
                "type": "object"
              }
            },
            "required": [
              "xapiActivityId",
              "lifecycle",
              "keywords",
              "associations"
            ]
          }
        ]
      },
      "SearchContent": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseContent"
          },
          {
            "properties": {
              "xapiActivityId": {
                "type": "string",
                "format": "uri",
                "description": "value used as activity ID in xAPI statements for content"
              },
              "xapiActivityTypeId": {
                "type": "string",
                "format": "uri",
                "description": "value used as activity type ID in xAPI statements for content"
              },
              "associations": {
                "type": "object",
                "properties": {
                  "channels": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "title": {
                          "type": "string"
                        },
                        "link": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "link"
                      ]
                    }
                  },
                  "parent": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "type": {
                        "type": "string",
                        "description": "Content type of parent (currently only used for course as parent of video)",
                        "enum": [
                          "COURSE"
                        ]
                      },
                      "title": {
                        "type": "string"
                      },
                      "link": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type",
                      "link"
                    ]
                  }
                }
              }
            },
            "required": [
              "associations"
            ]
          }
        ]
      },
      "ComplianceContent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "contentType": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Base content types",
                "enum": [
                  "COURSE"
                ]
              },
              "displayLabel": {
                "description": "Value to use as a display label, such as Video, Book, Book Summary, Audiobook, Audiobook Summary, Podcast, Article, Course, Document, Practice Lab, YouTube - or any other new additions",
                "type": "string"
              }
            },
            "required": [
              "type"
            ]
          },
          "localeCode": {
            "type": "string",
            "description": "RFC 5646 language tag, consisting of 2-character language code and optional variant/region code, with hyphen delimiter (e.g. 'en', 'en-US')"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "nullable": true,
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "alternateImageUrl": {
            "type": "string"
          },
          "aiccLaunch": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "AICC launch url, equivalent to File_Name value in .au file"
              },
              "params": {
                "type": "string",
                "description": "query string params to be included with AICC launch url, equivalent to Web_Launch value in .au file"
              }
            }
          },
          "duration": {
            "description": "Duration of content, if relevant, in ISO-8601 duration format",
            "nullable": true,
            "type": "string"
          },
          "mobileReady": {
            "type": "boolean",
            "description": "whether the content can be played on mobile device"
          },
          "associations": {
            "type": "object",
            "properties": {
              "topics": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "subtopics": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "id",
          "contentType",
          "localeCode",
          "title",
          "aiccLaunch",
          "imageUrl"
        ]
      },
      "CatalogStructure": {
        "type": "object",
        "properties": {
          "areas": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "imageUrl": {
                  "type": "string"
                },
                "alternateImageUrl": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "subjects": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "imageUrl": {
                        "type": "string"
                      },
                      "channels": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "title": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "imageUrl": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      },
                      "journeys": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "title": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "imageUrl": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ShareLinkForId": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string",
            "description": "A shareable link that can be distributed to users"
          },
          "publicLink": {
            "type": "string",
            "description": "A shareable link that redirects users to the skillsoft marketing site"
          }
        }
      },
      "ShareLinkForUrl": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string",
            "description": "A shareable link that can be distributed to users"
          }
        }
      },
      "CreateShareLinkBody": {
        "type": "object",
        "properties": {
          "localeCode": {
            "type": "string",
            "description": "Locale code value that need to be saved and sent back while launching the sharelink"
          },
          "isPublicLink": {
            "type": "boolean",
            "default": true,
            "description": "Should send as false explicitly if the user don't want the public link to get generated."
          },
          "contentUrlAnchor": {
            "type": "string",
            "description": "Any URL anchor to add after the content ID. This includes any anchor (#) with the eg \\#epubcfi(/6/42!/4/2%5Bepubmain%5D/2%5Bch02lev1sec1%5D/2/2/1:0).  Use full anchor syntax including the \\# to use this."
          },
          "isVideoOnly": {
            "type": "boolean",
            "default": false,
            "description": "If true, video is launched in video-only player."
          }
        }
      },
      "Url": {
        "description": "Relative URL used to create share link",
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9/][^//](.*[a-zA-Z0-9])?$",
            "description": "Percipio URL for which share link should be created"
          }
        }
      }
    }
  }
}