{
  "openapi": "3.0.0",
  "info": {
    "title": "User Management Service",
    "version": "1.0.0",
    "description": "Percipio User Management Services"
  },
  "paths": {
    "/v1/organizations/{orgId}/users": {
      "get": {
        "summary": "Retrieve a list of users based on the filter criteria",
        "operationId": "getUsers",
        "tags": [
          "/v1"
        ],
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "offset",
            "description": "Used in conjunction with 'max' to specify which set of 'max' users should be returned.  The default is 0 which returns 1 through max users.  If offset is sent as 1, then users 2 through max+1 are returned.",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "max",
            "description": "The maximum number of users to return in a response.  The default is 1000.  Valid values are between 1 and 1000.",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 1000
            }
          },
          {
            "name": "updatedSince",
            "description": "Filter criteria that only returns users updated since the date specified in GMT.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-total-count": {
                "description": "The total number of users that match the filter criteria",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetUser"
                  },
                  "example": [
                    {
                      "externalUserId": "string",
                      "email": "string",
                      "isActive": true,
                      "loginName": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "role": "LEARNER",
                      "updatedAt": "string",
                      "jobTitle": "string",
                      "jobRole": "string",
                      "approvalManager": {
                        "id": "string",
                        "email": "string",
                        "externalId": "string"
                      },
                      "customAttributes": [
                        {
                          "id": "string",
                          "name": "string",
                          "value": "string"
                        }
                      ],
                      "isInstructor": false,
                      "hasEnterpriseCoachingDashboard": false,
                      "hasCoaching": false,
                      "hasEnterpriseCoaching": false,
                      "isLXDCreator": false,
                      "isLXDPublisher": false,
                      "id": "string"
                    },
                    {
                      "externalUserId": "string",
                      "email": "string",
                      "isActive": true,
                      "loginName": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "role": "LEARNER",
                      "updatedAt": "string",
                      "jobTitle": "string",
                      "jobRole": "string",
                      "approvalManager": {
                        "id": "string",
                        "email": "string",
                        "externalId": "string"
                      },
                      "customAttributes": [
                        {
                          "id": "string",
                          "name": "string",
                          "value": "string"
                        }
                      ],
                      "isInstructor": false,
                      "hasEnterpriseCoachingDashboard": false,
                      "hasCoaching": false,
                      "hasEnterpriseCoaching": false,
                      "isLXDCreator": false,
                      "isLXDPublisher": false,
                      "id": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "operationId": "createUser",
        "tags": [
          "/v1"
        ],
        "description": "This service can be used to create new users within Percipio. When providing a password, the value must have at least 8 characters and contain at least 3 of the following 4 types of characters... Lower case letters (a-z), Upper case letters (A-Z), Numbers (0-9), Special characters (e.g. !@#%^&*)",
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          },
          "description": "The user to create is supplied in the request body",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/v1/organizations/{orgId}/users/{id}": {
      "get": {
        "summary": "Retrieve a user by UUID",
        "operationId": "getUserByUuid",
        "tags": [
          "/v1"
        ],
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "description": "User UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUser"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      },
      "patch": {
        "summary": "Update user by UUID",
        "operationId": "updateUserByUuid",
        "tags": [
          "/v1"
        ],
        "description": "This service can only be used to update an existing user within Percipio.",
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "description": "User UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateUser"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/v1/organizations/{orgId}/users/external-user-id/{externalUserId}": {
      "get": {
        "summary": "Retrieve a user by external user id",
        "operationId": "getUserByExternalUserId",
        "tags": [
          "/v1"
        ],
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "externalUserId",
            "description": "external user identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUser"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      },
      "patch": {
        "summary": "Upsert user by external user id",
        "operationId": "upsertUserByExternalUserId",
        "tags": [
          "/v1"
        ],
        "description": "This service can be used to create new users or update existing users within Percipio.",
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "externalUserId",
            "description": "Client system user identifier that is external to Percipio.  This is typically the primary key for the user in your system.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateUser"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/v1/organizations/{orgId}/users/login-name/{loginName}": {
      "get": {
        "summary": "Retrieve a user by login name",
        "operationId": "getUserByLoginName",
        "tags": [
          "/v1"
        ],
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "loginName",
            "description": "login name of the user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUser"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      },
      "patch": {
        "summary": "Upsert user by login name",
        "operationId": "upsertUserByLoginName",
        "tags": [
          "/v1"
        ],
        "description": "This service can be used to create new users or update existing users within Percipio.",
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "loginName",
            "description": "login name of the user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateUser"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/v1/organizations/{orgId}/users/login-name-or-email/{loginNameOrEmail}": {
      "get": {
        "summary": "Retrieve a user by Email-Id",
        "operationId": "getUserByEmailId",
        "tags": [
          "/v1"
        ],
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "loginNameOrEmail",
            "description": "Login name or Email Id of the user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUser"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/v1/organizations/{orgId}/batch-users-request": {
      "post": {
        "summary": "Accepts the batch users request and return a handler.",
        "operationId": "createBatchUsersRequest",
        "tags": [
          "/v1"
        ],
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BatchUser"
                }
              }
            }
          },
          "description": "The feed of the user details for an upsert is supplied in the request body. Please pass sendWelcomeEmail in first JSON object as true or false.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BatchRequest"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/v1/organizations/{orgId}/batch-users-request/{batchUsersRequestId}": {
      "get": {
        "summary": "Accepts the batch request handler and returns the processing response.",
        "operationId": "getBatchUsersRequest",
        "tags": [
          "/v1"
        ],
        "parameters": [
          {
            "name": "orgId",
            "description": "Organization UUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "batchUsersRequestId",
            "description": "Handle to access the batch processing response.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If status is 'In_Progress' returns the same, If 'Processed' returns the processing response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "tags": [],
  "security": [
    {
      "Authorization": []
    }
  ],
  "servers": [
    {
      "url": "/user-management"
    }
  ],
  "components": {
    "requestBodies": {
      "UpdateUser": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateUser"
            }
          }
        },
        "description": "The values for the user are supplied in the request body",
        "required": true
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "description": "Service account authorization token",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "BaseUser": {
        "type": "object",
        "properties": {
          "externalUserId": {
            "type": "string",
            "description": "Client system user identifier that is external to Percipio.  This is typically the primary key for the user in your system.",
            "maxLength": 255
          },
          "email": {
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Status of the user, only active users can access site."
          },
          "loginName": {
            "description": "Value that a user can use to log directly into Percipio",
            "maxLength": 128,
            "pattern": "^[a-zA-Z0-9._+-@]+$",
            "nullable": true,
            "type": "string"
          },
          "firstName": {
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "lastName": {
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "Used to determine what functionality the user can access e.g. LEARNER, ADMIN, CONTENT_CURATOR, CONTENT_COORDINATOR, LEARNING_ADMIN, MANAGER."
          },
          "jobTitle": {
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "jobRole": {
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "customAttributes": {
            "type": "array",
            "description": "Organization defined custom attributes",
            "items": {
              "$ref": "#/components/schemas/CustomAttribute"
            }
          },
          "isInstructor": {
            "type": "boolean",
            "default": false,
            "description": "Instructor, user will act as a Instructor."
          },
          "hasEnterpriseCoachingDashboard": {
            "type": "boolean",
            "default": false,
            "description": "Coach, user will act as a Coach."
          },
          "hasCoaching": {
            "type": "boolean",
            "default": false,
            "description": "coaching privilege"
          },
          "hasEnterpriseCoaching": {
            "type": "boolean",
            "default": false,
            "description": "Enterprise coaching privilege"
          },
          "isLXDCreator": {
            "type": "boolean",
            "default": false,
            "description": "LX Design studio creator"
          },
          "isLXDPublisher": {
            "type": "boolean",
            "default": false,
            "description": "LX Design studio publisher"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Percipio UUID for this user",
            "format": "uuid"
          },
          "externalUserId": {
            "type": "string",
            "description": "Client system user identifier that is external to Percipio.  This is typically the primary key for the user in your system.",
            "maxLength": 255
          },
          "email": {
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "isActive": {
            "type": "boolean",
            "description": "Status of the user, only active users can access site."
          },
          "loginName": {
            "description": "Value that a user can use to log directly into Percipio",
            "maxLength": 128,
            "pattern": "^[a-zA-Z0-9._+-@]+$",
            "nullable": true,
            "type": "string"
          },
          "firstName": {
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "lastName": {
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "Used to determine what functionality the user can access e.g. LEARNER, ADMIN, CONTENT_CURATOR, CONTENT_COORDINATOR, LEARNING_ADMIN, MANAGER."
          },
          "customAttributes": {
            "type": "array",
            "description": "Organization defined custom attributes",
            "items": {
              "$ref": "#/components/schemas/CustomAttribute"
            }
          },
          "approvalManager": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Percipio UUID of approval manager",
                "format": "uuid"
              }
            }
          },
          "directHrManager": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Percipio UUID of direct hr manager",
                "format": "uuid"
              }
            }
          },
          "jobTitle": {
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "jobRole": {
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "isInstructor": {
            "type": "boolean",
            "default": false,
            "description": "Instructor, user will act as a Instructor."
          },
          "hasEnterpriseCoachingDashboard": {
            "type": "boolean",
            "default": false,
            "description": "Coach, user will act as a Coach."
          },
          "hasCoaching": {
            "type": "boolean",
            "default": false,
            "description": "coaching privilege"
          },
          "hasEnterpriseCoaching": {
            "type": "boolean",
            "default": false,
            "description": "Enterprise coaching privilege"
          },
          "isLXDCreator": {
            "type": "boolean",
            "default": false,
            "description": "LX Design studio creator"
          },
          "isLXDPublisher": {
            "type": "boolean",
            "default": false,
            "description": "LX Design studio publisher"
          },
          "updatedAt": {
            "description": "last updated date and time for the user",
            "example": "2018-09-14T04:27:03.508713Z",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GetUser": {
        "type": "object",
        "allOf": [
          {
            "properties": {
              "id": {
                "type": "string",
                "description": "Percipio UUID for this user",
                "format": "uuid"
              },
              "approvalManager": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Percipio UUID of approval manager",
                    "format": "uuid"
                  },
                  "email": {
                    "type": "string",
                    "description": "email of approval manager"
                  },
                  "externalId": {
                    "type": "string",
                    "description": "externalId of approval manager"
                  }
                }
              },
              "updatedAt": {
                "description": "last updated date and time for the user",
                "example": "2018-09-14T04:27:03.508713Z",
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "$ref": "#/components/schemas/BaseUser"
          }
        ],
        "required": [
          "id"
        ]
      },
      "UpdateUser": {
        "type": "object",
        "allOf": [
          {
            "properties": {
              "password": {
                "description": "Organizations that exclusively use SSO, or notify users to set their own password, do not need to set this value.  When providing a password, the value must have at least 8 characters and contain at least 3 of the following 4 types of characters... Lower case letters (a-z), Upper case letters (A-Z), Numbers (0-9), Special characters (e.g. !@#%^&*)",
                "minLength": 8,
                "nullable": true,
                "type": "string"
              },
              "sendWelcomeEmail": {
                "type": "boolean",
                "description": "True for sending Welcome Email, false for suppressing welcome email; ignored on update.",
                "example": true,
                "default": false
              },
              "approvalManager": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "enum": [
                      "EXTERNAL_ID",
                      "LOGIN_NAME",
                      "LOGIN_NAME_OR_EMAIL",
                      "USER_UUID"
                    ],
                    "description": "The field to search for approval manager.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of provided field above.",
                    "type": "string"
                  }
                }
              },
              "directHrManager": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "enum": [
                      "EXTERNAL_ID",
                      "LOGIN_NAME",
                      "LOGIN_NAME_OR_EMAIL",
                      "USER_UUID"
                    ],
                    "description": "The field to search for direct hr manager.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of provided field above.",
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/BaseUser"
          }
        ]
      },
      "CreateUser": {
        "type": "object",
        "required": [
          "externalUserId"
        ],
        "allOf": [
          {
            "properties": {
              "password": {
                "description": "Organizations that exclusively use SSO, or notify users to set their own password, do not need to set this value.  When providing a password, the value must have at least 8 characters and contain at least 3 of the following 4 types of characters... Lower case letters (a-z), Upper case letters (A-Z), Numbers (0-9), Special characters (e.g. !@#%^&*)",
                "minLength": 8,
                "nullable": true,
                "type": "string"
              },
              "sendWelcomeEmail": {
                "type": "boolean",
                "description": "True for sending Welcome Email, false for suppressing welcome email.",
                "example": true,
                "default": false
              },
              "approvalManager": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "enum": [
                      "EXTERNAL_ID",
                      "LOGIN_NAME",
                      "LOGIN_NAME_OR_EMAIL",
                      "USER_UUID"
                    ],
                    "description": "The field to search for approval manager.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of provided field above.",
                    "type": "string"
                  }
                }
              },
              "directHrManager": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "enum": [
                      "EXTERNAL_ID",
                      "LOGIN_NAME",
                      "LOGIN_NAME_OR_EMAIL",
                      "USER_UUID"
                    ],
                    "description": "The field to search for direct hr manager.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of provided field above.",
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/BaseUser"
          }
        ]
      },
      "CustomAttribute": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "id": {
            "description": "Percipio UUID for this custom attribute.  The id and/or name can be provided to specify which custom attribute value to set for the user.  If both id and name are provided then only the id will be used when finding the custom attribute to update the value for.",
            "format": "uuid",
            "maxLength": 36,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The label used within Percipio to identify this custom attribute.  If the custom attribute id is not included, this label will be used to find the custom attribute to updated the value for.",
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          },
          "value": {
            "maxLength": 255,
            "nullable": true,
            "type": "string"
          }
        }
      },
      "BatchUser": {
        "type": "object",
        "allOf": [
          {
            "properties": {
              "newPassword": {
                "type": "string",
                "description": "Organizations that exclusively use SSO, or notify users to set their own password, do not need to set this value.  When providing a password, the value must have at least 8 characters and contain at least 3 of the following 4 types of characters... Lower case letters (a-z), Upper case letters (A-Z), Numbers (0-9), Special characters (e.g. !@#%^&*)",
                "minLength": 8
              },
              "sendWelcomeEmail": {
                "type": "boolean",
                "description": "True for sending Welcome Email, false for suppressing welcome email.",
                "default": false
              },
              "externalUserId": {
                "type": "string",
                "description": "Client system user identifier that is external to Percipio.  This is typically the primary key for the user in your system.",
                "maxLength": 255
              },
              "email": {
                "maxLength": 255,
                "nullable": true,
                "type": "string"
              },
              "isActive": {
                "type": "boolean",
                "description": "Status of the user, only active users can access site."
              },
              "loginName": {
                "description": "Value that a user can use to log directly into Percipio",
                "maxLength": 128,
                "pattern": "^[a-zA-Z0-9._+-@]+$",
                "nullable": true,
                "type": "string"
              },
              "firstName": {
                "maxLength": 255,
                "nullable": true,
                "type": "string"
              },
              "lastName": {
                "maxLength": 255,
                "nullable": true,
                "type": "string"
              },
              "welcomeEmailLanguage": {
                "enum": [
                  "en",
                  "es",
                  "de",
                  "fr",
                  "pt",
                  "ja",
                  "zh"
                ],
                "type": "string"
              },
              "role": {
                "type": "string",
                "description": "Used to determine what functionality the user can access e.g. LEARNER, ADMIN, CONTENT_CURATOR, CONTENT_COORDINATOR, LEARNING_ADMIN, MANAGER."
              },
              "customAttributes": {
                "type": "array",
                "description": "Organization defined custom attributes",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The label used within Percipio to identify this custom attribute.  If the custom attribute id is not included, this label will be used to find the custom attribute to updated the value for.",
                      "maxLength": 255,
                      "nullable": true,
                      "type": "string"
                    },
                    "value": {
                      "maxLength": 255,
                      "nullable": true,
                      "type": "string"
                    }
                  }
                }
              },
              "approvalManager": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "enum": [
                      "EXTERNAL_ID"
                    ],
                    "description": "The field to search for approval manager.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of provided field above.",
                    "type": "string"
                  }
                }
              },
              "directHrManager": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "enum": [
                      "EXTERNAL_ID"
                    ],
                    "description": "The field to search for direct hr manager.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of provided field above.",
                    "type": "string"
                  }
                }
              },
              "jobTitle": {
                "maxLength": 255,
                "nullable": true,
                "type": "string"
              },
              "jobRole": {
                "maxLength": 255,
                "nullable": true,
                "type": "string"
              },
              "isInstructor": {
                "type": "boolean",
                "default": false,
                "description": "Instructor, user will act as a Instructor."
              },
              "hasEnterpriseCoachingDashboard": {
                "type": "boolean",
                "default": false,
                "description": "Coach, user will act as a Coach."
              },
              "mustResetPassword": {
                "type": "boolean",
                "default": false,
                "description": "Whether or not the user must reset their password on initial login."
              },
              "hasCoaching": {
                "type": "boolean",
                "default": false,
                "description": "coaching privilege"
              },
              "hasEnterpriseCoaching": {
                "type": "boolean",
                "default": false,
                "description": "Enterprise coaching privilege"
              },
              "isLXDCreator": {
                "type": "boolean",
                "default": false,
                "description": "LX Design studio creator"
              },
              "isLXDPublisher": {
                "type": "boolean",
                "default": false,
                "description": "LX Design studio publisher"
              }
            }
          }
        ]
      },
      "BatchRequest": {
        "type": "object",
        "allOf": [
          {
            "properties": {
              "batchUsersRequestId": {
                "type": "string",
                "description": "BatchUserRequestId for fetching result"
              },
              "xRequestId": {
                "type": "string",
                "description": "xRequestId is unique for each response"
              },
              "xAuthorServiceName": {
                "type": "string",
                "description": "xAuthorServiceName i.e. PINTS_SCHEDULING"
              }
            }
          }
        ]
      },
      "BatchResponse": {
        "type": "object",
        "properties": {
          "batchUsersRequestId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "description": "status",
            "enum": [
              "PENDING",
              "IN_PROGRESS",
              "SUBMITTED_FOR_PROCESSING",
              "FAILED"
            ]
          },
          "apiResponse": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BatchResponseGeneral"
                },
                {
                  "$ref": "#/components/schemas/BatchResponseRowsProcessed"
                },
                {
                  "$ref": "#/components/schemas/BatchResponseErrorScenario"
                }
              ]
            }
          }
        }
      },
      "BatchResponseGeneral": {
        "type": "object",
        "properties": {
          "importId": {
            "type": "string",
            "format": "uuid"
          },
          "feedFileName": {
            "type": "string"
          },
          "isComplete": {
            "type": "string"
          },
          "startDate": {
            "description": "last updated date and time for the user",
            "example": "2018-09-14T04:27:03.508713Z",
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "description": "last updated date and time for the user",
            "example": "2018-09-14T04:27:03.508713Z",
            "type": "string",
            "format": "date-time"
          },
          "percentComplete": {
            "type": "integer"
          }
        }
      },
      "BatchResponseRowsProcessed": {
        "type": "object",
        "properties": {
          "totalBytesInFile": {
            "type": "integer"
          },
          "processedBytesOfFile": {
            "type": "integer"
          },
          "rowsCount": {
            "type": "integer"
          },
          "failedRowsCount": {
            "type": "integer"
          }
        }
      },
      "BatchResponseErrorScenario": {
        "type": "object",
        "properties": {
          "sizeLimit8Characters": {
            "type": "integer"
          },
          "requiredFieldMissing": {
            "type": "integer"
          },
          "isAnInvalidField": {
            "type": "integer"
          },
          "fieldsTooLong": {
            "type": "integer"
          },
          "fieldsNotUnique": {
            "type": "integer"
          },
          "fieldsNotInCamelCaseUnique": {
            "type": "integer"
          },
          "complexityTooLow": {
            "type": "integer"
          },
          "mustBeActiveOrInactive": {
            "type": "integer"
          },
          "invalidLoginNameFormat": {
            "type": "integer"
          },
          "invalidEmailFormat": {
            "type": "integer"
          },
          "updatingObfuscatedUserNotAllowed": {
            "type": "integer"
          },
          "updatingPercipioSupportNotAllowed": {
            "type": "integer"
          },
          "isRequiredWhenPasswordProvided": {
            "type": "integer"
          },
          "isRequiredWhenLoginProvided": {
            "type": "integer"
          }
        }
      }
    }
  }
}